/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow mod";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <750>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    macros {
        ugla1: ugla1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_tap>,
                <&rgb_ug RGB_COLOR_HSB(213,100,50)>,
                <&macro_tap>,
                <&rgb_ug RGB_ON>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 1>,
                <&macro_tap>,
                <&rgb_ug RGB_OFF>;

            label = "UGLA1";
            wait-ms = <0>;
        };

        ugla2: ugla2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 2>,
                <&macro_tap>,
                <&rgb_ug RGB_COLOR_HSB(314,100,50)>,
                <&macro_tap>,
                <&rgb_ug RGB_ON>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 2>,
                <&macro_tap>,
                <&rgb_ug RGB_OFF>;

            label = "UGLA2";
            wait-ms = <0>;
        };

        almostmaximize: almostmaximize {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "ALMOSTMAXIMIZE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q        &kp W           &kp E           &kp R             &kp T        &kp Y      &kp U             &kp I           &kp O           &kp P                  &rgb_ug RGB_TOG
&kp TAB     &hm LCTRL A  &hm LEFT_ALT S  &hm LEFT_GUI D  &hm LEFT_SHIFT F  &kp G        &kp H      &hm LEFT_SHIFT J  &hm LEFT_GUI K  &hm LEFT_ALT L  &hm LEFT_CONTROL SEMI  &kp SQT
&kp LSHIFT  &kp Z        &kp X           &kp C           &kp V             &kp B        &kp N      &kp M             &kp COMMA       &kp DOT         &kp FSLH               &kp LEFT_CONTROL
                                         &kp LGUI        &ugla1            &kp ENTER    &kp SPACE  &ugla2            &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp C_MUTE         &kp N1                    &kp N2             &kp N3             &kp N4                 &kp N5                   &kp N6     &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&kp C_VOLUME_UP    &kp LG(LC(LS(NUMBER_4)))  &trans             &trans             &trans                 &kp LG(RS(C))            &kp LEFT   &kp DOWN  &kp UP    &kp RIGHT  &trans  &rgb_ug RGB_TOG
&kp C_VOLUME_DOWN  &kp LA(LC(LEFT))          &kp LA(LC(RIGHT))  &kp LA(LC(ENTER))  &kp LG(LA(LC(RIGHT)))  &kp LA(LS(LC(ENTER)))    &trans     &trans    &trans    &trans     &trans  &rgb_ug RGB_EFF
                                                                &kp LGUI           &trans                 &kp ENTER                &kp SPACE  &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &mo 3     &trans       &trans     &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans        &trans        &trans        &trans        &trans
                        &trans  &trans  &trans    &trans      &trans        &trans
            >;
        };
    };
};
